/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.MenuItemDto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-02-20T04:00:38.477Z")

@Api(value = "menuItem", description = "the menuItem API")
public interface MenuItemApi {

    @ApiOperation(value = "Add a MenuItem, with MenuItemOptions.", nickname = "addMenuItem", notes = "Add a MenuItem, complete with MenuItemOptions, to the database. In a complete system, this would also contain APIs to update, search, and delete MenuItems, but for this demo, this will do. A MenuItem is a FoodOption that has been added to a specific MenuItem. ", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Menu Item Created"),
        @ApiResponse(code = 400, message = "Bad Request") })
    @RequestMapping(value = "/menuItem",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<String> addMenuItem(@ApiParam(value = "Complete menu item, with MenuItemOptions" ,required=true )  @Valid @RequestBody MenuItemDto menuItem);

}
